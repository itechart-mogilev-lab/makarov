{"version":3,"sources":["hamster_1.png","components/video.mp4","mute.jpg","unmute.png","components/square.js","components/board.js","components/game.js","components/hamster.js","components/video.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Square","_this","this","react_default","a","createElement","className","onClick","props","value","Component","Board","i","square_Square","squares","renderSquare","Game","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","history","Array","fill","xIsNext","stepNumber","slice","length","calculateWinner","setState","concat","step","status","_this2","current","winner","moves","map","move","desc","key","jumpTo","board_Board","handleClick","lines","_lines$i","slicedToArray","b","c","Hamster","src","hamster","alt","Player","isMuted","handleMuteState","bind","assertThisInitialized","prevState","id","video","loop","autoPlay","muted","hamster_Hamster","mute","unmute","App","Fragment","video_Player","game_Game","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2e4c50f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hamster_1.6911ad86.png\";","module.exports = __webpack_public_path__ + \"static/media/video.75fef87f.mp4\";","module.exports = __webpack_public_path__ + \"static/media/mute.abded369.jpg\";","module.exports = __webpack_public_path__ + \"static/media/unmute.d706eedc.png\";","import React, { Component } from \"react\";\r\n\r\nexport default class Square extends Component {\r\n  render() {\r\n    return (\r\n      <button className=\"square\" onClick={() => this.props.onClick()}>\r\n        {this.props.value}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Square from \"./square\";\r\n\r\nexport default class Board extends Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Board from \"./board\";\r\n\r\nexport default class Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null)\r\n        }\r\n      ],\r\n      xIsNext: true,\r\n      stepNumber: 0\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares\r\n        }\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? \"Go to move #\" + move : \"Go to game start\";\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board squares={current.squares} onClick={i => this.handleClick(i)} />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n          <ol>{/* TODO */}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","import React, {Component} from \"react\";\r\nimport hamster from \"../hamster_1.png\";\r\n\r\nexport default class Hamster extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"hamster\">\r\n                <img src={hamster}  className=\"App-logo\" alt=\"logo\" />\r\n                <p>Inasne anti-gravity hamster with watermark</p>\r\n            </div>\r\n        )\r\n    }\r\n} ","import React, {Component} from 'react';\r\nimport video from \"./video.mp4\";\r\nimport Hamster from \"./hamster\";\r\nimport mute from \"../mute.jpg\";\r\nimport unmute from \"../unmute.png\";\r\n\r\nexport default class Player extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isMuted: true\r\n        }\r\n        this.handleMuteState = this.handleMuteState.bind(this);\r\n    }\r\n\r\n    handleMuteState () {\r\n        this.setState(prevState => ({\r\n            isMuted: !prevState.isMuted\r\n        }));\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className = \"video\">\r\n            <video id=\"background-video\" src={video} loop autoPlay muted={this.state.isMuted}/>\r\n            <Hamster handleMuteState={this.handleMuteState}/>\r\n            <button onClick={this.handleMuteState}><img id=\"music_icon\" src={this.state.isMuted ? mute : unmute}></img></button>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Game from \"./components/game\";\nimport Hamster from \"./components/hamster\";\nimport Player from \"./components/video\";\n\nclass App extends Component {\n  render() {//player\n    return (<>\n    <Player/>\n    <Game/>\n    </>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}